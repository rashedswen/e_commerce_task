// Mocks generated by Mockito 5.3.2 from annotations
// in e_commerce_task/test/item_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:collection' as _i2;
import 'dart:ui' as _i7;

import 'package:e_commerce_task/models/item.dart' as _i6;
import 'package:e_commerce_task/models/transaction.dart' as _i5;
import 'package:e_commerce_task/models/transaction_with_item.dart' as _i3;
import 'package:e_commerce_task/viewModel/items_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUnmodifiableListView_0<E> extends _i1.SmartFake
    implements _i2.UnmodifiableListView<E> {
  _FakeUnmodifiableListView_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionWithItem_1 extends _i1.SmartFake
    implements _i3.TransactionWithItem {
  _FakeTransactionWithItem_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ItemsModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemsModel extends _i1.Mock implements _i4.ItemsModel {
  MockItemsModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UnmodifiableListView<_i5.Transactions> get transactions =>
      (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue: _FakeUnmodifiableListView_0<_i5.Transactions>(
          this,
          Invocation.getter(#transactions),
        ),
      ) as _i2.UnmodifiableListView<_i5.Transactions>);
  @override
  _i2.UnmodifiableListView<_i3.TransactionWithItem> get transactionsWithItem =>
      (super.noSuchMethod(
        Invocation.getter(#transactionsWithItem),
        returnValue: _FakeUnmodifiableListView_0<_i3.TransactionWithItem>(
          this,
          Invocation.getter(#transactionsWithItem),
        ),
      ) as _i2.UnmodifiableListView<_i3.TransactionWithItem>);
  @override
  _i2.UnmodifiableListView<_i6.Item> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: _FakeUnmodifiableListView_0<_i6.Item>(
          this,
          Invocation.getter(#items),
        ),
      ) as _i2.UnmodifiableListView<_i6.Item>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void getTransactions() => super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addTransaction(_i5.Transactions? transaction) => super.noSuchMethod(
        Invocation.method(
          #addTransaction,
          [transaction],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeTransaction(_i5.Transactions? transaction) => super.noSuchMethod(
        Invocation.method(
          #removeTransaction,
          [transaction],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i6.Item> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: <_i6.Item>[],
      ) as List<_i6.Item>);
  @override
  void addItem(_i6.Item? item) => super.noSuchMethod(
        Invocation.method(
          #addItem,
          [item],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeItem(_i6.Item? item) => super.noSuchMethod(
        Invocation.method(
          #removeItem,
          [item],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i3.TransactionWithItem> transactionsList({String? productName = r''}) =>
      (super.noSuchMethod(
        Invocation.method(
          #transactionsList,
          [],
          {#productName: productName},
        ),
        returnValue: <_i3.TransactionWithItem>[],
      ) as List<_i3.TransactionWithItem>);
  @override
  _i3.TransactionWithItem getTransactionWithItem(int? transactionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionWithItem,
          [transactionId],
        ),
        returnValue: _FakeTransactionWithItem_1(
          this,
          Invocation.method(
            #getTransactionWithItem,
            [transactionId],
          ),
        ),
      ) as _i3.TransactionWithItem);
  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
